node {
  println "Building and deploying '${params.GIT_HASH}'"

  stage('Checkout') {
    git 'git@github.com:uken/spring_demo.git'
    sh "git checkout ${params.GIT_HASH}"
  }

  maven_version = sh(returnStdout: true, script: """
    ./mvnw -q \
    -Dexec.executable="echo" \
    -Dexec.args='\${project.version}' \
    --non-recursive \
    org.codehaus.mojo:exec-maven-plugin:1.3.1:exec
  """).trim()

  app_version = "v_${maven_version}"

  stage('Tests') {
    sh "./mvnw verify"
  }

  stage('Maven build') {
    sh "./mvnw clean package -Dmaven.test.skip=true"
  }

  stage('Docker build') {
    docker.build('spring_demo')
  }

  stage('Docker push') {
    docker.withRegistry('https://661382096004.dkr.ecr.us-east-1.amazonaws.com/bingo-pop', 'ecr:us-east-1:main-aws-credentials') {
      docker.image('spring_demo').push(app_version)
    }
  }

  stage('Git Tag') {
    sh("""
      git tag -a ${app_version} -m 'add tag for production release version ${app_version}'
      git push --tags
    """)
  }

  stage('Deploy Production') {
    sh """
      ./ecs/deploy.sh \
        spring_demo_service_production \
        ${app_version} \
        spring_demo \
        arn:aws:elasticloadbalancing:us-east-1:661382096004:targetgroup/bingo-pop-ecs-staging/faa5893c446642b0 \
        8080 \
        Platform-Jenkins-EC2BuilderIamUser-6DB6WP8EH17K \
        production \
        bingo \
        bingo-pop
    """
  }
}
